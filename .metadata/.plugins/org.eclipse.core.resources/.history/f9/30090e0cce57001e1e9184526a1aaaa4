

import java.io.File;
import java.io.IOException;


import org.openqa.selenium.OutputType;
import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;




public  getScreenshotPath(String testCaseName, WebDriver driver) throws IOException {

	WebDriver driver;
	
	File source = driver.getScreenshotAs(OutputType.FILE);
	String destinationFile = System.getProperty("user.dir")+"//reports"+testCaseName+".png";
	FileUtils.copyFile(source, new File(destinationFile));
	return destinationFile;
	
	
}


public class Listeners implements ITestListener{
	
	
	ExtentTest test;
	ExtentReports extent = ExtentReporterNG.getReporterObject();
	ThreadLocal<ExtentTest> extentTest = new ThreadLocal<ExtentTest>(); //Thread safe
	WebDriver driver;
	
//	public String getScreenshotPath(String testCaseName, WebDriver driver) throws IOException
//	{
//		File source = ((Object) driver).getScreenshotAs(OutputType.FILE);
//		String destinationFile = System.getProperty("user.dir")+"//reports"+testCaseName+".png";
//		FileUtils.copyFile(source, new File(destinationFile));
//		return destinationFile;
//		//1. capture and place in folder //2. extent report pick file and attach to report
//		
//		
//		
//	}
	
	
	
	@Override
	public void onTestStart(ITestResult result) {
		// TODO Auto-generated method stub
		test = extent.createTest(result.getMethod().getMethodName());
		extentTest.set(test);//unique thread id(ErrorValidationTest)->test
	}

	@Override
	public void onTestSuccess(ITestResult result) {
		// TODO Auto-generated method stub
		extentTest.get().log(Status.PASS, "Test Passed");
		
	}

	@Override
	public void onTestFailure(ITestResult result) {
	    extentTest.get().log(Status.FAIL, MarkupHelper.createLabel(result.getName() + " - Failed", ExtentColor.RED));
	    extentTest.get().fail(result.getThrowable());

	    // Capture and attach screenshot
	    WebDriver driver = YourWebDriverFactory.getDriver(); // Replace with your WebDriver instance
	    if (driver instanceof TakesScreenshot) {
	        TakesScreenshot screenshotDriver = (TakesScreenshot) driver;
	        byte[] screenshot = screenshotDriver.getScreenshotAs(OutputType.BYTES);
	        extentTest.get().addScreenCaptureFromBase64String(Base64.getEncoder().encodeToString(screenshot), "Failure Screenshot");
	    }

	@Override
	public void onTestSkipped(ITestResult result) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onStart(ITestContext context) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onFinish(ITestContext context) {
		// TODO Auto-generated method stub
		extent.flush();
		
	}
	
	
	
	

}

//package avi.TestComponents;
//import org.testng.annotations.Test;
//
//import java.io.IOException;
//
//import org.testng.ITestContext;
//import org.testng.ITestListener;
//import org.testng.ITestResult;
//
//import com.aventstack.extentreports.ExtentReports;
//import com.aventstack.extentreports.ExtentTest;
//import com.aventstack.extentreports.Status;
//
//import avi.resources.ExtentReporterNG;
//
//public class Listeners extends BaseTest implements ITestListener {
//	ExtentTest test;
//	ExtentReports extent = ExtentReporterNG.getReportObject();
//
//    @Override
//    public void onTestStart(ITestResult result) {
//    	test = extent.createTest(result.getMethod().getMethodName());
//        // This method will be called when a test method starts.
////        System.out.println("Test Started: " + result.getName());
//    }
//
//    @Override
//    public void onTestSuccess(ITestResult result) {
//    	test.log(Status.PASS,"Test Passed");
//        // This method will be called when a test method passes successfully.
////        System.out.println("Test Passed: " + result.getName());
//    }
//
//    @Override
//    public void onTestFailure(ITestResult result) {
//    	test.fail(result.getThrowable());
//    	
//    	try {
//    		driver = (WebDriver) result.getTestClass().getRealClass().getField("driver").get(result.getInstance());
//    		
//    	} catch(Exception e1) {
//    		e1.printStackTrace();
//    	}
//    	
//    	
//    	
//        // This method will be called when a test method fails.
////    	Screenshot
//    	String filePath = null;
//		try {
//			filePath = getScreenshot(result.getMethod().getMethodName(),driver);
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//    	test.addScreenCaptureFromPath(filePath,result.getMethod().getMethodName());
//    	
//    	
////        System.out.println("Test Failed: " + result.getName());
//    }
//
//    @Override
//    public void onTestSkipped(ITestResult result) {
//        // This method will be called when a test method is skipped.
////        System.out.println("Test Skipped: " + result.getName());
//    }
//
//    @Override
//    public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
//        // This method will be called when a test method fails but within success percentage.
//        // You can customize this behavior as needed.
//    }
//
//    @Override
//    public void onStart(ITestContext context) {
//        // This method will be called before the test suite starts.
////        System.out.println("Test Suite Started: " + context.getName());
//    }
//
//    @Override
//    public void onFinish(ITestContext context) {
//    	extent.flush();
//        // This method will be called after the test suite finishes.
////        System.out.println("Test Suite Finished: " + context.getName());
//    }
//}
//
