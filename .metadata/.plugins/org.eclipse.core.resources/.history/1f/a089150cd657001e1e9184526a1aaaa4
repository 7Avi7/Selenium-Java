
import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;

import org.openqa.selenium.OutputType;
import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.ITestResult;

import com.aventstack.extentreports.ExtentTest;


import java.io.IOException;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;
import org.openqa.selenium.TakesScreenshot;


public class Listeners implements ITestListener{
	ExtentTest test;
	ExtentReports extent = ExtentReporterNG.getReporterObject();
	WebDriver driver;
	
//	public String getScreenshotPath(String testCaseName, WebDriver driver) throws IOException
//	{
//		File source = driver.getScreenshotAs(OutputType.FILE);
//		String destinationFile = System.getProperty("user.dir")+"//reports"+testCaseName+".png";
//		FileUtils.copyFile(source, new File(destinationFile));
//		return destinationFile;
//		//1. capture and place in folder //2. extent report pick file and attach to report
//		
//		
//		
//	}
	public String getScreenshotPath(String testCaseName, WebDriver driver) throws IOException
	{
	    // 1. Capture screenshot
	    File source = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);

	    // 2. Define the destination directory and file name
	    String destinationDirectory = System.getProperty("user.dir") + File.separator + "reports";
	    String destinationFile = destinationDirectory + File.separator + testCaseName + ".png";

	    // Ensure the destination directory exists; if not, create it
	    File directory = new File(destinationDirectory);
	    if (!directory.exists()) {
	        directory.mkdirs(); // Create the directories if they don't exist
	    }

	    // Copy the screenshot to the destination
	    FileUtils.copyFile(source, new File(destinationFile));

	    // Return the path to the captured screenshot
	    return destinationFile;
	}
	@Override
	public void onTestStart(ITestResult result) {
		// TODO Auto-generated method stub
		 test= extent.createTest(result.getMethod().getMethodName());
	}

	@Override
	public void onTestSuccess(ITestResult result) {
		// TODO Auto-generated method stub
		test.log(Status.PASS, "Test Passed");
		
	}

	@Override
	public void onTestFailure(ITestResult result) {
		// TODO Auto-generated method stub
		//screenshot code
		test.fail(result.getThrowable());
		
		try {
			driver = (WebDriver) result.getTestClass().getRealClass().getField("driver")
					.get(result.getInstance());
			
			
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} 
		try {
			test.addScreenCaptureFromPath(getScreenshotPath(result.getMethod().getMethodName(),driver), result.getMethod().getMethodName());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public void onTestSkipped(ITestResult result) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onStart(ITestContext context) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void onFinish(ITestContext context) {
		// TODO Auto-generated method stub
		extent.flush();
	}
}
